/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE    0
#define FNAV    1
#define BT      2

/ {
    combos {
        compatible = "zmk,combos";

        combo_BOOT {
            timeout-ms = <50>;
            key-positions = <4 5 6 7>;
            bindings = <&bootloader>;
        };

        combo_BT {
            timeout-ms = <50>;
            key-positions = <49 56>;
            bindings = <&mo BT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE         &kp N1  &kp N2  &kp N3        &kp N4     &kp N5    &kp N6   &kp N7   &kp N8     &kp N9         &kp N0         &kp BSPC
&kp TAB           &kp Q   &kp W   &kp E         &kp R      &kp T     &kp Y    &kp U    &kp I      &kp O          &kp P          &kp BACKSLASH
&kp LEFT_CONTROL  &kp A   &kp S   &kp D         &kp F      &kp G     &kp H    &kp J    &kp K      &kp L          &kp SEMICOLON  &kp APOS
&kp LEFT_SHIFT    &kp Z   &kp X   &kp C         &kp V      &kp B     &kp N    &kp M    &kp COMMA  &kp PERIOD     &kp SLASH      &kp RIGHT_SHIFT
                          &mo 1   &kp LEFT_ALT  &kp SPACE  &kp HOME  &kp END  &kp ESC  &kp ENTER  &kp RIGHT_GUI  &mo FNAV
            >;
        };

        fun_nav {
            bindings = <
&kp TILDE  &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT         &kp CARET              &kp AMPS        &kp ASTRK        &kp LPAR    &kp RPAR         &kp DEL
&kp GRAVE  &kp F1    &kp F2   &kp F3    &kp F4    &kp LBRC          &kp RBRC               &kp HOME        &kp UP           &kp END     &kp PG_UP        &kp DQT
&trans     &kp F5    &kp F6   &kp F7    &kp F8    &kp LPAR          &kp RIGHT_PARENTHESIS  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp RIGHT   &kp PG_DN        &trans
&trans     &kp F9    &kp F10  &kp F11   &kp F12   &kp LEFT_BRACKET  &kp RIGHT_BRACKET      &kp K_APP       &kp PRINTSCREEN  &kp SLCK    &kp PAUSE_BREAK  &kp INS
                     &trans   &none     &trans    &kp MINUS         &kp EQUAL              &trans          &trans           &kp C_MUTE  &none
            >;
        };

        blutut {
            bindings = <
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none       &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none         &none       &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none         &bt BT_CLR  &none  &none  &none  &none  &none
&none         &none         &none         &none         &none         &none         &none       &none  &none  &none  &none  &none
                            &none         &none         &none         &none         &none       &none  &none  &none  &none
            >;
        };
    };
};
